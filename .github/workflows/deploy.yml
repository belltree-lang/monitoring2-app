name: Deploy to Google Apps Script

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install tools
        run: |
          npm install -g @google/clasp
          npm install google-auth-library@9

      # サービスアカウントJSONをBase64で保存している前提
      - name: Setup clasp auth (Service Account)
        env:
          CLASP_CREDENTIALS: ${{ secrets.CLASP_CREDENTIALS }}
        run: |
          echo "$CLASP_CREDENTIALS" | base64 -d > $HOME/_creds.json
          node - <<'JS'
          const fs = require('fs');
          const path = require('path');
          const {JWT} = require('google-auth-library');

          const srcPath = path.join(process.env.HOME, '_creds.json');
          const src = JSON.parse(fs.readFileSync(srcPath, 'utf8'));
          const dest = path.join(process.env.HOME, '.clasprc.json');

          if (src.type === 'service_account') {
            const scopes = [
              'https://www.googleapis.com/auth/script.projects',
              'https://www.googleapis.com/auth/script.deployments',
              'https://www.googleapis.com/auth/script.webapp.deploy'
            ];
            const client = new JWT({
              email: src.client_email,
              key: src.private_key,
              scopes
            });

            (async () => {
              try {
                const {token} = await client.getAccessToken();
                if (!token) throw new Error('Failed to mint access token');

                const out = {
                  token: {
                    access_token: token,
                    refresh_token: '',
                    scope: scopes.join(' '),
                    token_type: 'Bearer',
                    expiry_date: Date.now() + 3500 * 1000
                  },
                  oauth2ClientSettings: {
                    clientId: '',
                    clientSecret: '',
                    redirectUri: 'http://localhost'
                  },
                  isLocalCreds: true
                };
                fs.writeFileSync(dest, JSON.stringify(out));
                console.log('✅ Wrote ~/.clasprc.json with service account token');
                process.exit(0);
              } catch (e) {
                console.error(e);
                process.exit(1);
              }
            })();
          } else {
            console.error('CLASP_CREDENTIALS must be a service account JSON');
            process.exit(1);
          }
          JS

          echo "=== ~/.clasprc.json (token.head only) ==="
          head -c 80 $HOME/.clasprc.json
          echo ""

      - name: Push to Google Apps Script
        run: clasp push -f

      - name: Debug .clasprc.json
        run: |
          echo "=== ~/.clasprc.json ==="
          cat $HOME/.clasprc.json || echo "No file"
